
do_tmpfs() {
	 mkdir -p /tmp
	 mount -t tmpfs -o defaults,nodev,nosuid,noexec,mode=1777,size=$1,uid=0,gid=0,noauto,noatime,nodiratime shm /tmp
}
do_aufs() {
	 XINO_FILE=/tmp/.aufs.xino
	 mkdir -p /aufs-ro /aufs-rw
	 /sbin/fsck.jfs /dev/disk/by-uuid/$1
	 /sbin/fsck.jfs /dev/disk/by-uuid/$2
	 mount -t jfs -o rw,noatime,nodiratime /dev/disk/by-uuid/$1 /aufs-rw
	 mount -t jfs -o ro,noatime,nodiratime /dev/disk/by-uuid/$2 /aufs-ro
	 mount -t aufs -o br:/aufs-rw=rw:/aufs-ro=ro,xino=$XINO_FILE,noauto,noatime,nodiratime,udba=none none /new_root
	 mkdir -p /new_root/aufs-ro /new_root/aufs-rw 
	 mount --move /aufs-ro /new_root/aufs-ro
	 mount --move /aufs-rw /new_root/aufs-rw
}
ppz_mount_handler() {
	 eval $(awk '/^HOSTNAME=/' /etc/rc.conf)
	 case $HOSTNAME in
		  gabba)			do_tmpfs 5%;; #~12MB
		  scaly)			do_tmpfs 40%;;
		  ediacra|*)	do_tmpfs 12%;;
	 esac
	 case $HOSTNAME in
		  scaly)			do_aufs   45d0d831-d045-410c-b2ec-d525ef69e36c   5b25f749-ab8d-4749-a8b0-3b7d3408af19;;
		  *)				default_mount_handler "$@";;
	 esac
	 mount --move /tmp /new_root/tmp
}
exec_sh_wrapper() {
	 echo ":: Hard break requested...have fun ;)"
	 launch_interactive_shell --exec
}
if [ "${hardbreak}" = "y" ]; then
	 run_hook() {
		  mount_handler=exec_sh_wrapper
	 }
else
	 run_hook() {
		  mount_handler=ppz_mount_handler
	 }
fi
