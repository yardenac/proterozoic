#!/bin/bash
. /usr/share/ppz/bash.functions
have_mount_point() {
	 [ -a "$1" ] || mkdir "$1"
	 [ -L "$1" ] && {
		  rm -f "$1"
		  mkdir "$1"
	 }
	 [ -d "$1" ] && {
		  is_empty_dir "$1" || {
				rsync -aAXD "$1/" /tmp
				echo "EVERYTHING'S BEEN COPIED, DON'T WORRY..."
				rm -ri "$1"
				mkdir "$1"
		  }
	 }
	 [ -d "$1" ] || {
		  echo "$1 is not a link or a dir... weird"
		  return 1
	 }
}
tmp_bind() {
	 umount /dev/shm &>/dev/null
	 for P in /dev/shm /var/tmp; do
		  have_mount_point "$P" || continue
		  mount --bind /tmp "$P"
	 done
}
set_hacks() {
	 set +o noclobber
	 echo 2000 > /sys/module/block/parameters/events_dfl_poll_msecs
	 set -o noclobber
}
resolv_override() {
	 [ -f /etc/resolv.conf.override ] \
		  && rm -f /etc/resolv.conf \
		  && cp -f /etc/resolv.conf{.override,}
}
stop_torrents() {
	 local t=100 tm=/usr/bin/transmission-remote
	 if [ -x $tm ] && pgrep -f transmission-daemon &>/dev/null; then
		  echo_blue_n "Shutting down torrents..."
		  su - eu -c "$tm --exit" &>/dev/null || { echo_red "failed!"; return 1; }
		  while pgrep -f transmission-daemon &>/dev/null; do
				let t-- || { echo_red "timed out!"; return 1; }
				echo_blue_n .
				sleep 3
		  done
		  echo_blue "done!"
	 fi
}
enc_teardown() {
	 local enc mnt map
	 for enc in $(awk '/^: edev/ {print $3}' /etc/rc.conf); do
		  for mnt in $(findmnt -runRo TARGET /dev/mapper/$enc | sort -r); do
				umount -r $mnt
		  done
	 done
	 for map in $(dmsetup ls --target crypt --tree -o ascii,compact --exec echo); do
		  cryptsetup luksClose $map
	 done
}
print_welcome() {
	 : # echo_yellow BOOTING ARCH LINUX / PROTEROZOIC
}
add_hook sysinit_start			tmp_bind
add_hook sysinit_udevsettled	set_hacks
add_hook sysinit_premount		/usr/bin/integrity.ppz
add_hook multi_start				resolv_override
add_hook shutdown_start			stop_torrents
add_hook shutdown_preumount	enc_teardown
