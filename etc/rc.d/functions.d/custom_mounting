#!/bin/bash
. /etc/bash.functions
have_mount_point() {
	 [ -a "$1" ] || mkdir "$1"
	 [ -L "$1" ] && {
		  rm -f "$1"
		  mkdir "$1"
	 }
	 [ -d "$1" ] && {
		  is_empty_dir "$1" || {
				rsync -aAXD "$1/" /tmp
				echo "EVERYTHING'S BEEN COPIED, DON'T WORRY..."
				rm -ri "$1"
				mkdir "$1"
		  }
	 }
	 [ ! -d "$1" ] && {
		  echo "$1 is not a link or a dir... weird"
		  return 1
	 }
}
#	 [ "$(stat -c %D /)" = "$(stat -c %D "$1")" ] || {
#		  echo mount point is a different device than /
#	 }
}
tmp_to_shm()    { have_mount_point /dev/shm && mount --bind /tmp /dev/shm; }
tmp_to_vartmp() { have_mount_point /var/tmp && mount --bind /tmp /var/tmp; }
do_scaly_green() {
	COUNT=5
	while let COUNT--; do
		 mount -vt vfat /dev/disk/by-uuid/0D3D-BD20 /media/usb-fat && break
		 sleep 3
	done
	cryptsetup -d /media/usb-fat/green.key luksOpen /dev/disk/by-uuid/0105eeab-2fc6-4dc7-8b89-4a70605e1483 green
	umount /media/usb-fat
	fsck /dev/mapper/green
}
do_edie_var() {
    mkdir /tmp/.aufs.var
    if [ $( ls -A1d /var/* 2>/dev/null | wc -l ) -gt 0 ]; then
		  VARHOLD=/.var.$( date +%s )
		  mv /var $VARHOLD
		  mkdir /var
		  mount -t aufs -o br:/tmp/.aufs.var=rw:/.var.old=ro,xino=/tmp/.aufs.xino,noauto,noatime,nodiratime,udba=none none /var
		  cp -av $VARHOLD/* /var/
		  rm -rv $VARHOLD
    else
		  [ -a /var ] || mkdir /var
		  mount -t aufs -o br:/tmp/.aufs.var=rw:/.var.old=ro,xino=/tmp/.aufs.xino,noauto,noatime,nodiratime,udba=none none /var
    fi
	 tmp_to_vartmp
}
custom_mounting_everyone() {
	 case $HOSTNAME in
		  scaly)   do_scaly_green;;
		  ediacra) do_edie_var;;
	 esac
	 /usr/bin/ppz.integrity
}
add_hook sysinit_udevlaunched tmp_to_shm
case $HOSTNAME in
	 ediacra)	:;;
	 *)			add_hook sysinit_udevlaunched tmp_to_vartmp;;
esac
add_hook sysinit_premount custom_mounting_everyone
