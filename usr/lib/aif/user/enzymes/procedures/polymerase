#!/bin/bash
depend_procedure core base
. /usr/share/ppz/bash.functions
. /usr/share/ppz/bash.functions.install

TARGET=/media/targay
MNTPTS=( /boot ) # / is implied

pacman_target() {
	 # --config /usr/share/ppz/default/pacman.conf
	 until /usr/bin/pacman --root ${TARGET} \
		  --cachedir ${TARGET}/var/cache/pacman/pkg \
		  --dbpath ${TARGET}/var/lib/pacman \
		  --logfile ${TARGET}/var/log/pacman.log \
		  --noprogressbar --noconfirm --needed "$@"; do
		  askyn "Pacman did not succeed - try again?" || {
				askyn "Abort?" \
					 && exit \
					 || break
		  }
	 done
}
unmount_all() {
	 local RV=0
	 for MNTD_FS in /proc /sys /dev ${MNTPTS[@]} /; do
		  local FULLPATH=${TARGET}${MNTD_FS}
		  findmnt -n ${FULLPATH%%\/} >/dev/null \
				&& {
				umount ${FULLPATH%%\/} || RV=1
		  }
	 done
	 return $RV
}

start_process() {
	 pushtrap 'poptrap; unmount_all; exit $?;' HUP QUIT EXIT INT ABRT TERM
	 #execute worker configure #just does i/o stuff i dont use
	 execute worker sysprep #remounts / rw
	 usetvar TARGET 'Choose a temporary mount point: '
	 unmount_all || {
		  mount
		  until askyn "Unmounting all failed. You'll have to deal with that first. Whenever you're ready... :)"; do :; done
	 }
	 echo_red "YOU SHOULD HAVE ALREADY PARTITIONED - A LIST TO HELP YOU ;)"
	 blkid | grep -ivE 'raid|crypto_LUKS|squashfs' | sort -u
	 rm -f /tmp/ppz-fstab
	 for MNTPT in / ${MNTPTS[@]}; do
		  local DEV=
		  until [ -b "${DEV}" ]; do
				[ "$DEV" ] && partprobe 2>&1 | grep -iv /dev/sr0
				usetvar DEV "CHOOSE A PARTITION FOR $MNTPT (^c to partprobe): " /dev/
				DEV=$(readlink -e ${DEV})
		  done
		  format_ext4 interactive "$DEV"
		  mkdir -p ${TARGET}${MNTPT}
		  mount ${DEV} ${TARGET}${MNTPT}
		  cat >> /tmp/ppz-fstab <<-EOF
				UUID="$(blkid -s UUID -o value ${DEV})" ${MNTPT}	ext4 defaults,noatime,nodiratime,barrier=1,commit=30,ro 0 1
				EOF
		  enhash targmnt${MNTPT//\/} ${DEV}
	 done
	 mkdir -pm 755 ${TARGET}/{dev,proc,sys,var/{cache/pacman/pkg,lib/pacman,log}}
	 for SPECIAL_FS in proc sys dev; do
		  findmnt -n ${TARGET}/${SPECIAL_FS} >/dev/null || {
				case $SPECIAL_FS in
					 proc)	mount -t proc	none	${TARGET}/proc;;
					 sys)	mount -t sysfs	none	${TARGET}/sys;;
					 dev)	mount -o bind	/dev	${TARGET}/dev;;
				esac
		  }
	 done
	 [ -a ${TARGET}/etc/rc.conf ] \
		  && askyn "Base system already looks populated ... skip reinstalling that?" \
		  || pacman_target -Syq initscripts
	 grep -iq oxygen ${TARGET}/etc/fstab &>/dev/null \
		  && askyn "Looks like we already did some basic configging ... skip that?" || {
		  set +o noclobber
		  cp -f /usr/share/ppz/default/rc.conf ${TARGET}/etc/rc.conf
		  usetvar HOSTNAME "Choose hostname! Take yr time ;) " new_machine_$(date +%Y_%m_%d)
		  usetvar HOSTTYPE "Choose a host type! [ desktop | laptop | linode ]: " desktop
		  sed -i \
				-e s/%SET_TYPE%/${HOSTTYPE}/ig \
				-e s/%SET_HOSTNAME%/${HOSTNAME}/ig ${TARGET}/etc/rc.conf
		  cat >  ${TARGET}/etc/fstab <<-EOF
				/dev/mapper/enc /media/enc auto defaults,rw,relatime,nodiratime 0 0
				UUID=4C93-65D0  /media/oxygen   vfat    defaults,user,noatime,nodiratime,fmask=177,dmask=077,check=s 0 0
				EOF
		  cat >> ${TARGET}/etc/fstab < /tmp/ppz-fstab
		  rm -f /tmp/ppz-fstab
		  cp -i {,${TARGET}}/etc/localtime
		  set -o noclobber
	 }
	 [ -a ${TARGET}/usr/bin/mplayer ] && askyn "System looks FULLY installed! Spare the poor mirrors a repeat?" || {
		  pkgs_groups=(x web multimedia cd wireless laptop neverneed)
		  pkgs_x=(xorg-{server,xinit,xrdb,xsetroot,xhost,xwininfo,xrandr} xdotool \
				xf86-input-{keyboard,mouse} xscreensaver xclip libxft xcursor-themes \
				numlockx consolekit fvwm perl-xml-parser fbpanel wmctrl mingetty hsetroot \
				urxvt-url-select urxvt-tabbedex transset-df xcompmgr acpi ttf-code2000
				xf86-video-ati xf86-video-intel nvidia)
		  pkgs_web=(seamonkey flashplugin alsa-utils openjdk6 icedtea-web sext acroread
				chromium)
		  pkgs_multimedia=(gimp feh mplayer mencoder imagemagick gcolor2)
		  pkgs_gaming=(zsnes mupen64plus)
		  pkgs_cd=(eject cdrkit dvd+rw-tools)
		  pkgs_wireless=(wireless_tools wpa_supplicant b43-firmware iw) #wpa_actiond ifplugd
		  pkgs_laptop=(pcmciautils dhcpcd)
		  pkgs_printer=(cups hplip a2ps)
		  pkgs_neverneed=(licenses logrotate lvm2 nano ppp reiserfsprogs xfsprogs)
		  pkgs_go=($(comm -23 <(pacman -Sgq base | sort -u) \
				<(eval eval list_sorted '\$\{pkgs_'$(commalist ${pkgs_groups[@]})'[@]\}') ))
		  local A=; for A in ${pkgs_groups[@]}; do
				eval askyn 'Install $A things? \(${pkgs_'$A'[@]}\)' && eval 'pkgs_go+=(${pkgs_'$A'[@]})'
		  done
		  pkgs_go+=(btrfs-progs-unstable tor privoxy proterozoic) # grub2-bios
		  usetvar others "Type in any other packages you want to add: " 'aif parted dmidecode base-devel' ''
		  pkgs_go+=(${others//,/ })
		  pacman_target -Sq ${pkgs_go[@]}
		  cp -f ${TARGET}/{usr/share/ppz/default,etc}/pacman.conf
	 }
	 askyn "Use present net config as static on target?" && {
		  static_networking_from_runtime ${TARGET}
	 }
	 askyn "Set root password now?" && {
		  while true; do
				chroot ${TARGET} passwd root && break
		  done
	 }
	 fix_initcpio_ppz ${TARGET}
	 askyn "Install grub? (un/freeze XFS if you have to...)" && {
		  install_grub_ppz ${TARGET} $(unhash targmntboot) $(unhash targmnt) ${HOSTNAME}
		  echo_red "Grub finished."
	 }
	 echo "You might want to edit these files:"
	 echo "		/boot/grub/menu.lst"
	 echo "		/etc/rc.conf"
	 echo "		/etc/resolv.conf"
	 echo "		/etc/profile.d/proxy.sh"
	 until askyn "ready to quit? (stuff will be unmounted)"; do
		  ll ${TARGET}/
	 done
	 unmount_all
	 poptrap
}
