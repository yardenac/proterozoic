#!/usr/bin/ash

run_hook() {
    modprobe -a -q dm-crypt >/dev/null 2>&1

	 ep_wait_for() {
        local c=${2:-10}
		  while :; do
				[ -b "$1" ] && return
				if [ $c -le 0 ]; then
					 read -n 1 -p "Cannot find $1. Try again? [*/n] " userkey
					 [ "${userkey}" = n ] && return 0
				fi
				let c--
				sleep 0.5
        done
        return 1
	 }

    local hdMount=false headerDir=/boot
    if [ -n "${headerdev}" ]; then
       ep_wait_for "${headerdev}" 10
       hdtype=$(blkid -s TYPE -o value "${headerdev}")
       if [ "${hdtype}" = ext4 ]; then
          hdMount=true
          headerDir=/hd
          mkdir -p $headerDir
          mount "${headerdev}" $headerDir
       fi
    fi

    if [ -n "${cryptdevice}" ]; then
        IFS=: read cryptdev cryptname cryptoptions <<EOF
$cryptdevice
EOF
    else
        return
    fi

    local headerFlag=false
    for cryptopt in ${cryptoptions//,/ }; do
        case ${cryptopt} in
            allow-discards)
                cryptargs="${cryptargs} --allow-discards"
                ;;
            header)
                cryptargs="${cryptargs} --header $headerDir/header.img"
                headerFlag=true
                ;;
            *)
                echo "Encryption option '${cryptopt}' not known, ignoring." >&2
                ;;
        esac
    done

    if [ -n "${cryptdev}" ] && resolved=$(resolve_device "${cryptdev}" ${rootdelay}); then
        if $headerFlag || cryptsetup isLuks ${resolved} >/dev/null 2>&1; then
            dopassphrase=1
            # Ask for a passphrase
            if [ ${dopassphrase} -gt 0 ]; then
                echo ""
                echo "A password is required to access the ${cryptname} volume:"

                #loop until we get a real password
                local csnum=5
                while true; do
                   if cryptsetup open --type luks ${resolved} ${cryptname} ${cryptargs} --verbose; then
                      break
                   else
                      let csnum--
                      if [ $csnum -gt 0 ]; then
                         sleep 2
                         continue
                      fi
                      PS1='[rootfs \W]\$ ' sh -i 0</dev/console 1>/dev/console 2>/dev/console
                      return
                   fi
                done
            fi
            if [ -e "/dev/mapper/${cryptname}" ]; then
                :
            else
                err "Password succeeded, but ${cryptname} creation failed, aborting..."
                exit 1
            fi
        else
            err "Failed to open encryption mapping: The device ${cryptdev} is not a LUKS volume."
        fi
    fi

    if $hdMount; then
       umount /hd
    fi
}
