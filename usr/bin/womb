#!/usr/bin/bash

[ "x$EUID" = "x0" ] && {
	 echo "Root should never run womb!"
	 sleep 10
	 exit 1
}

[ "$USER" = ex ] && {

	 homedir_i_own() { local rv=0 c=1 try="$1" base="$1"
		  # this echoes path to a homedir owned by $USER
		  # returns 0 if homedir already existed
		  # returns 1 if we had to create it
		  # please FFS dont use homedirs with spaces :P
		  until [ -d $try ] && [ -O $try ] && [ -a $try/.xinitrc ]; do
				[ ${base:0:5} = /tmp/ ] || {
					 echo "Cannot make homedir unless it's in /tmp!"
					 sleep 10
					 exit 1
				}
				[ -a $try ] || {
					 cp -PR --preserve=links,mode,timestamps /etc/skel.ppz $try
					 chmod 700 $try
#					 echo DID THE CP...
#					 sleep 10
					 break
				}
				# apparently it exists but not (dir + ours)
				[ -O $try ] && {
					 # ours but not a dir
					 rm -rf --one-file-system $try
				} || {
					 # not ours, or rm failed
					 export try=$base.$c
					 let c++
					 continue
				}
		  done
		  echo $try
	 }
	 case $HOME in
		  /|/etc/skel.ppz) HOME=/tmp/ex
	 esac
	 export HOME=$(homedir_i_own $HOME)

#	 echo HOME: $HOME
#	 echo DISPLAY: $DISPLAY

	 [ "$(/usr/bin/tty)" = /dev/tty3 ] \
		  && [ -x /usr/bin/xinit ] \
		  && ! /usr/bin/pgrep -x X &>/dev/null && {

		  /usr/bin/integrity.ppz

		  . /usr/share/ppz/bash.functions
		  
		  # make sure xauthority file works
		  set_proper_histfile

		  # allow for more chromium instances
		  for mode in tor proxy; do
				[ -d ~/.config/chromium.$mode ] || \
					 cp -PR --preserve=links,mode,timestamps /etc/skel.ppz/.config/chromium ~/.config/chromium.$mode
		  done

		  exec /usr/bin/xinit -- /usr/bin/X vt4 -f 0 -nolisten tcp -retro

		  exit $? #this makes respawn work
	 }
}

case "${2%% *}" in
	 rsync)	:;;
	 *)		/usr/bin/integrity.ppz;;
esac

cd ~

# AFAICT, ssh invokes shells like: /bin/shell -c 'command'
# 'command' is passed as one string - further args to ssh
# are concatenated with spaces. So be very careful to
# escape filenames and such - anything with iffy spaced-ness
# should be a single string treated like input to "eval", like:
#
# ssh user@host 'echo hello\ world > ~/my\ file.txt'
exec -l /usr/bin/bash "$@"
