#!/bin/bash
# this gets run in:
#   post_install
#    functions.d
#     bash.bashrc.local
#      post_upgrade

. /etc/bash.functions

[ -L ~/.emacs.d ] || {
	 [ -d .emacs.d ] && mv .emacs.d .emacs.d.$(uniq_token)
	 ln -s /etc/.emacs.d ~/
}

am_root || exit

#comment
sed -i 's%^\(/bin/rm -rf /tmp.*\)$%\#\1%ig' /etc/rc.sysinit

#uncomment
case $(hostname) in
	 gabba)	sed -i 's%^\#\(server time.fremont.cbane.org.*\)$%\1%ig' /etc/ntp.conf;;
	 *)		sed -i 's%^\(server time.fremont.cbane.org.*\)$%\#\1%ig' /etc/ntp.conf;;
esac

grep -iEq ^/usr/bin/womb$ /etc/shells || echo /usr/bin/womb >> /etc/shells

[ -e /media/inmem ] || mkdir /media/inmem

#check rc.conf vars - move from install file
#&/| make homedir

case $(hostname) in
	 gabba) :;;#one fgetty in inittab
	 *) :;;#2 or 3 of them?
esac

#TODO: check for pacnew files

shopt -s nullglob
IFS=$'\n'
for F in $(ls -1 /{root,home/*,media/green/*}/.bash_history 2>/dev/null); do
#	 if it doesn't exist (or is empty), just copy.
#	 if it's there, check if it needs doing
#	 if so, check if it's tiny (don't risk big files)
#	 if so, do a swaperoo
	 skel_file=/etc/skel.ppz/.bash_history
	 ! [ -s "$F" ] && cp ${skel_file} ${F} || {
		  ! cmp -s <(head -n 1 ${F}) <(head -n 1 ${skel_file}) \
				&& askyn "$F ("$(du -sh ${F} | cut -f 1)") has no skel prefix. Join them?" && {

				backup_file=${F}.ppz.$(date +%s)
				mv ${F} ${backup_file}
				cp ${skel_file} ${F}
				cat ${backup_file} >> ${F}
				cat ${skel_file} ${backup_file} | md5sum
				cat ${F} | md5sum
#				rm ${backup_file}
		  }
	 }
	 lsattr "$F" >/dev/null 2>&1 && {
		  ATTRSET=$(lsattr "$F")
		  [ ${ATTRSET:5:1} != a ] && say_and_do chattr +a "$F"
	 }
done

enforce_perms 444 /etc/.emacs.d/init.el
enforce_perms 555 /etc/.emacs.d
