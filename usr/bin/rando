#!/usr/bin/bash

rando_oneword() {
   word=$(aspell -d en dump master | aspell -l en munch-list single \
           | aspell -l en expand | awk '{print $1}'\
           | sort -Rs | head -n 1)
	echo ${word,,}
}

rando_manypws() {
   export COLUMNS=$(tput cols)
   rand=${1:-68}
   while let rand--; do
      random_password 25 31
   done | column
}

rando_manywords() {
   echo $(aspell -d en dump master | aspell -l en expand \
      | sort -Ru | head -n 130)
}

rando_date_before() {
    # random date no later than arg, and no earlier than "arg - 2^31 seconds"
    date -d @$(( $(date +%s -d "$*") - (($RANDOM<<30|$RANDOM<<15|$RANDOM)>>14) ))
}
rando_manydates() {
    local d=${1:-12}
    while let d--; do
        rando_date_before '18 years ago'
    done | column
}

rando_zip() {
    shuf -n 1 /usr/share/ppz/zips
}
rando_manyzips() {
    local z=${1:-16}
    while let z--; do
        rando_zip
    done | column
}

hexchars=0123456789abcdef
rando_hex() {
	 echo -n ${hexchars:$(( RANDOM % 16 )):1}
}
rando_mac() {
	 local c=6
	 while let c--; do
		  rando_hex
		  rando_hex
		  (( c )) && echo -n : || echo
	 done
}
rando_manymacs() {
    export COLUMNS=$(tput cols)
    macs=${1:-15}
    while let macs--; do
        rando_mac
    done | column
}

functions=()
for arg; do
	 functions+=$arg
done

(( ${#functions[@]} )) || functions=(manypws manymacs manydates manyzips manywords)

for f in "${functions[@]}"; do
	 if [ "$(type -t "rando_$f" 2>/dev/null)" = function ]; then
		  "rando_$f"
	 fi
done
