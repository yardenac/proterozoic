#!/bin/bash
preowned_files=(
	 etc/default/useradd
	 etc/screenrc
	 etc/ssh/ssh_config
#	 etc/syslog-ng/syslog-ng.conf
	 etc/logrotate.conf
	 etc/issue
	 etc/ntp.conf
	 etc/apcupsd/apcupsd.conf
)
need_attention=(
	 etc/ssh/sshd_config
)
what_to_do_with=(
	 etc/rc.conf
	 etc/inittab
	 etc/pacman.conf
)
rcconf_vars=(
	 LOCALE
	 tiMezOne
	 daemons
	 enc_homedir #/soy
	 enc_mapname
	 enc_dev
#	 draft_username_w_uid_2063
#	 encrypted_swap_file /estaba
#	 ssh_authkeys_file /etc/ssh/sshd_authorized_keys
#	 tmpfs_size 50%
)

######### FUNCTIONS
manual_changes_summary() {
	 :
#	 echo "add HOOKS=\"ppz_tmp\" to /etc/mkinitcpio.conf"
}
are_same() {
	 [ -a "$1" ] && [ -a "$2" ] || return 1
	 diff -qd "$1" "$2" >/dev/null
}
clobberella() {
	 F="$1"
	 [ -f "$F.ppz" ] || return
	 [ -f "$F" ] && { #do a "nice clobber" - make a (unique) backup
		  are_same ${F}{,.ppz} && return || \
				for N in {001..999}; do
					 [ -f "$F.old.$N" ]			|| { mv -n ${F}{,.old.$N};	break; }
					 are_same ${F}{,.old.$N}	&& { rm -f "$F";				break; }
				done
	 }
	 cp -n "$F.ppz" "$F"
}
all_triggers_same() {
	 let changes=0
	 for F in "$@"; do
		  are_same ${F}{,.last} || {
				/bin/cp -f ${F}{,.last}
				let changes++
		  }
	 done
	 [ $changes -eq 0 ]
}
file_empty() {
	 grep -iqvE '^[[:space:]]*(#|;|//|$)' "$@"
}
enforce_locales() {
	 FILE=etc/locale.gen
	 file_empty ${FILE} && {
		  [ -f ${FILE}.ppz ] \
				&& clobberella ${FILE} \
				|| cat > ${FILE} <<EOF
en_US.UTF-8 UTF-8
en_US ISO-8859-1
es_US.UTF-8 UTF-8
es_US ISO-8859-1
he_IL.UTF-8 UTF-8
he_IL ISO-8859-8
iw_IL.UTF-8 UTF-8
iw_IL ISO-8859-8
EOF
	 }
	 locale-gen
}
pwn_files() {
	 for F in ${preowned_files[@]}; do
		  clobberella "$F"
	 done
#	 for F in ${need_attention[@]}; do
#		  echo SET UP MANUALLY: $F.ppz
#	 done
}
check_is_rcconf_complete() {
	 let vars_not_found=0
	 for V in ${rcconf_vars[@]}; do
		  grep -iEq ^${V}= /etc/rc.conf || {
				let vars_not_found++
				echo VAR NOT FOUND IN RC.CONF: ${V}
		  }
	 done
	 return $vars_not_found
}
kernel_name=( $(pacman -Q | grep -i kernel ) )
kernel_name=${kernel_name[0]}
check_triggers() {
	 all_triggers_same etc/syslog-ng/syslog-ng.conf || {
#		  echo reloading syslog-ng....
		  /etc/rc.d/syslog-ng reload
#		  killall -SIGHUP /usr/sbin/syslog-ng
	 }
	 all_triggers_same lib/initcpio/{hooks,install}/ppz_tmp || {
		  grep -iEq '^HOOKS=".*ppz_tmp.*"' /etc/mkinitcpio.conf || {
				echo '/etc/mkinitcpio.conf: No HOOKS="ppz_temp", so didn'"'"'t rebuild initrd'
				rm -f lib/initcpio/install/ppz_tmp.last
				return 1
		  }
		  [ -w /boot ] || {
				grep -qiE '[[:space:]]/boot.*ro' /etc/mtab \
					 && mount -o remount,rw /boot
		  } || {
				echo "couldn't figure out your /boot ... not building initrd!"
				rm -f lib/initcpio/install/ppz_tmp.last
				return 1
		  }
		  [ -n "${kernel_name}" ] && {
				/sbin/mkinitcpio -p ${kernel_name}
		  }
		  # experiment to see how it handles return values...
		  # if it failed we want to make sure it can work again next time
		  # so probably mess with the "last" files or something
	 }
}

########## HOOKS

pre_install() {
	 check_is_rcconf_complete
	 enforce_locales
}
post_install() {
	 /etc/rc.d/iptables restart
	 pwn_files
	 /usr/bin/integrity.ppz
	 check_triggers
	 manual_changes_summary
}

pre_upgrade() {
	 check_is_rcconf_complete
	 for F in ${preowned_files[@]}; do
		  are_same ${F}{,.ppz} && rm -f "$F"
	 done
}
post_upgrade() {
	 pwn_files
	 /usr/bin/integrity.ppz
	 check_triggers
}
